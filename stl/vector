////////////////////////////////////////////////////////////////////  Vector insertion   ///////////////////////////////////////////////////////////

#include<bits/stdc++.h>

using namespace std;
vector<int>insertvec(int arr[],int n)
{
    vector<int>v;
    {
        for(int i=0;i<n;i++)
        v.push_back(arr[i]);
   
    }
   
    return v;
    
}
int main()
{
   int t;
   cin>>t;
   while(t--)
   {
       int n;
       cin>>n;
       int arr[n];
       for(int i=0;i<n;i++)
       {
           cin>>arr[i];
       }
       vector<int>res= insertvec(arr,n);
       for(auto x:res)
       {
           cout<<x<<" ";
       }
       cout<<endl;
   }
    return 0;
}


/////////////////////////////////////////////////////////////////   Front to Back  /////////////////////////////////////////

#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

void iter(vector<int>::iterator it1,vector<int>::iterator it2);


 // } Driver Code Ends
//User function Template for C++

//Complete this function. it1 points to vector.begin(), it2 points to vector.end()
void iter(vector<int>::iterator it1,vector<int>::iterator it2)
{
    //Your code here. Use iterator to print all the elements
    for(auto i=it1;i!=it2;i++)
    {
        cout<<*i<<" ";
    }
    cout<<endl;
}

// { Driver Code Starts.

int main() {
	int t;
	cin>>t;
	while(t--)
	{
	    int n;
	    cin>>n;
	    vector<int>v;
	    for(int i=0;i<n;i++)
	    {
	        int x;
	        cin>>x;
	        v.push_back(x);
	    }
	    
	    iter(v.begin(),v.end()); //passing begin and end addresses of vector to the function
	   
	}
	return 0;
}

//////////////////////////////////////////////////////////////  Back to Front  ///////////////////////////////////////////////
#include <bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
//User function Template for C++

/*Function to print vector in reverse order
* using iterator
* it1 : v.rbegin(), reverse iterator
* it2 : v.rend(), reverse iterator
*/
void reverseIterator(vector<int>::reverse_iterator it1, vector<int>::reverse_iterator it2){
    
    // Your code here
      for(auto i = it1; i != it2; i++)
        cout<<*i<<" ";
    
    cout<<endl;
    
}


// { Driver Code Starts.

// Driver code
int main() {
	
	int testcase;
	cin >> testcase;
	
	while(testcase--){
	    int N;
	    cin >> N;
	    
	    // Declaring vector
	    vector<int> v;
	    
	    // Taking input to vector
	    for(int i = 0;i<N;i++){
	        int k;
	        cin >> k;
	        v.push_back(k);
	    }
	    
	    // Calling function
	    reverseIterator(v.rbegin(), v.rend());
	    
	}
	
	return 0;
}  // } Driver Code Ends



////////////////////////////////////////////////////////////////     Vector Sum  /////////////////////////////////////

// Find sum of the vector
#include <bits/stdc++.h>

using namespace std; 


 // } Driver Code Ends
//User function Template for C++

//Complete the function
int SumMe(vector<int> arr, int n){


	 // Your code here
    // Use accumulate function
    int sum=0;
     vector<int>v;
    {
        for(int i=0;i<n;i++)
        v.push_back(arr[i]);
   
    }
    for(auto x:v)
    {
        sum=sum+x;
        
    }
    return sum;
    
}


// { Driver Code Starts.

int main() 
{ 
    int t;
    cin>>t;

    while(t--){

    int n;
    cin>>n;
    
    vector<int> arr(n);
    for(int i=0; i<n;++i){
        cin>>arr[i];
    }

    cout<<SumMe(arr, n)<<endl;

    }

	return 0; 
} 
  // } Driver Code Ends
  
  //////////////////////////////////////////////////  Sort and Reverse Vector   ////////////////////////////////
  
#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;
vector<int> sortVector(vector<int>v);
vector<int> reverseVector(vector<int>v);

 // } Driver Code Ends
//User function Template for C++

vector<int> sortVector(vector<int>v)
{
   //Your code here. Use library function
   sort(v.begin(),v.end());
    return v;
}
vector<int> reverseVector(vector<int>v)
{
     //Your code here. Use library function
     reverse(v.rbegin(),v.rend());
    return v;
}

// { Driver Code Starts.


int main() {
	int t;
	cin>>t;
	while(t--)
	{
	    int n;
	    cin>>n;
	    vector<int>v;
	    for(int i=0;i<n;i++)
	    {
	        int x;
	        cin>>x;
	        v.push_back(x); //Input vector elements
	    }
	    
	    v=sortVector(v); //sort and store in v
	   
	   for(auto x:v)
	   cout<<x<<" "; //print elements of v
	   cout<<endl; 
	   v=reverseVector(v); //reverse v and store it in v
	   for(auto x:v)
	   cout<<x<<" "; //print elements of v
	   cout<<endl;
	   
	}
	return 0;
}




  // } Driver Code Ends
  
  ////////////////////////////////////////  Find the Frequency     ////////////////////////////////////////////////
  //Initial Template for C++
#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
//User function Template for C++

/*Function to find frequency of x
* x : element whose frequency is to be found
* v : input vector
*/
int findFrequency(vector<int> v, int x){
    // Your code here
    int count=0;
    for(int i=0;i<v.size();i++)
    {
        if(x==v[i])
         count++;
    }
    return count;
}

// { Driver Code Starts.
int main() {
	
	int testcase;
	
	cin >> testcase;
	
	while(testcase--){
	    int N;
	    cin >> N;
	    
	    // Declaring vector 
	    vector<int> v;
	        
	    // Taking vector element input
	    for(int i = 0;i<N;i++){
	        int k;
	        cin >> k;
	        v.push_back(k);
	    }
	    
	    // element whose frequency to be find
	    int x;
	    cin >> x;
	    cout << findFrequency(v, x) << endl;
	}
	
	return 0;
}  // } Driver Code Ends
/////////////////////////////////////////////////////    Elements Less Than K /////////////////


}#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
//User function Template for C++

vector<int> list_less_than_k(vector<int> a,int n,int k)
{
    // Your code here
    //Return a vector with elements less than k
      vector<int>result;
    
   // int i;
    for(int i=0;i<n;i++)
    {
        if(a[i]<k)
        {
            result.push_back(a[i]);
        }
    }
    return result;


// { Driver Code Starts.

// Driver code
int main()
{
    int testcase;
	
	cin >> testcase;
	
	while(testcase--){
	    int N;
	    cin >> N;
	    
	    // Declaring vector 
	    vector<int> a(N);
	        
	    // Taking vector element input
	    for(int i = 0;i<N;i++){
	        cin>>a[i];
	    }
	    
	    int k;
	    cin>>k;
	    
	    vector<int>result = list_less_than_k(a,N,k);
	    
	    for(auto i:result)
	    {
	        cout<<i<<" ";
	    }
	    cout<<endl;
	}
	return 0;
}



//Position this line where user code will be pasted.  // } Driver Code Ends


///////////////////////////////
